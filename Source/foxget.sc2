*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.20" SourceFile="foxget.scx" CPID="1252" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="2" />

	*<PropValue>
		DataSource = .NULL.
		Height = 0
		Left = 0
		Name = "Dataenvironment"
		Top = 0
		Width = 0
	*</PropValue>

ENDDEFINE

DEFINE CLASS foxget AS vfpxbaseform OF "vfpxbaselibrary.vcx" 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="lblPubDateLabel" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblPubDate" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblHomeURLLabel" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblHomeURL" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblDescripLabel" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="edtDescrip" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblKeywordsLabel" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="edtKeywords" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdInstall" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdUninstall" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdUpdate" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblAuthorLabel" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblAuthor" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblVersionLabel" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblVersion" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblInstalledVersionLabel" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblInstalledVersion" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblInstalledDateLabel" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblInstalledDate" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="edtProgress" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lstPackages" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkShowOnlyInstalled" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtSearch" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblSearch" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*m: getpackages		&& Creates a cursor of packages
		*m: update		&& Displays the installation progress
	*</DefinedPropArrayMethod>

	*<PropValue>
		Caption = "FoxGet"
		DataSession = 2
		DoCreate = .T.
		Height = 567
		Icon = shopping_basket.ico
		Name = "FOXGET"
		Width = 816
		_memberdata = <VFPData>
			<memberdata name="update" display="Update"/>
			<memberdata name="getpackages" display="GetPackages"/>
		</VFPData>
	*</PropValue>

	ADD OBJECT 'chkShowOnlyInstalled' AS vfpxbasecheckbox WITH ;
		Alignment = 0, ;
		Caption = "Show only installed packages", ;
		Left = 10, ;
		Name = "chkShowOnlyInstalled", ;
		Top = 13
		*< END OBJECT: ClassLib="vfpxbaselibrary.vcx" BaseClass="checkbox" />

	ADD OBJECT 'cmdInstall' AS vfpxbasecommandbutton WITH ;
		Caption = "Install", ;
		Left = 385, ;
		Name = "cmdInstall", ;
		Top = 303
		*< END OBJECT: ClassLib="vfpxbaselibrary.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdUninstall' AS vfpxbasecommandbutton WITH ;
		Caption = "Uninstall", ;
		Left = 485, ;
		Name = "cmdUninstall", ;
		Top = 303
		*< END OBJECT: ClassLib="vfpxbaselibrary.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdUpdate' AS vfpxbasecommandbutton WITH ;
		Caption = "Update", ;
		Left = 585, ;
		Name = "cmdUpdate", ;
		Top = 303
		*< END OBJECT: ClassLib="vfpxbaselibrary.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'edtDescrip' AS vfpxbaseeditbox WITH ;
		BorderStyle = 0, ;
		ControlSource = "Packages.Descrip", ;
		DisabledBackColor = 255,255,255, ;
		DisabledForeColor = 0,0,0, ;
		Enabled = .F., ;
		Height = 75, ;
		Left = 385, ;
		Name = "edtDescrip", ;
		ScrollBars = 0, ;
		Top = 60, ;
		Width = 420
		*< END OBJECT: ClassLib="vfpxbaselibrary.vcx" BaseClass="editbox" />

	ADD OBJECT 'edtKeywords' AS vfpxbaseeditbox WITH ;
		BorderStyle = 0, ;
		ControlSource = "Packages.Keywords", ;
		DisabledBackColor = 255,255,255, ;
		DisabledForeColor = 0,0,0, ;
		Enabled = .F., ;
		Height = 30, ;
		Left = 483, ;
		Name = "edtKeywords", ;
		ScrollBars = 0, ;
		Top = 143, ;
		Width = 322
		*< END OBJECT: ClassLib="vfpxbaselibrary.vcx" BaseClass="editbox" />

	ADD OBJECT 'edtProgress' AS vfpxbaseeditbox WITH ;
		Height = 200, ;
		Left = 10, ;
		Name = "edtProgress", ;
		Top = 355, ;
		Width = 795
		*< END OBJECT: ClassLib="vfpxbaselibrary.vcx" BaseClass="editbox" />

	ADD OBJECT 'lblAuthor' AS vfpxbaselabel WITH ;
		Caption = "Author", ;
		Left = 485, ;
		Name = "lblAuthor", ;
		Top = 180
		*< END OBJECT: ClassLib="vfpxbaselibrary.vcx" BaseClass="label" />

	ADD OBJECT 'lblAuthorLabel' AS vfpxbaselabel WITH ;
		Caption = "Author:", ;
		FontBold = .T., ;
		Left = 385, ;
		Name = "lblAuthorLabel", ;
		Top = 180
		*< END OBJECT: ClassLib="vfpxbaselibrary.vcx" BaseClass="label" />

	ADD OBJECT 'lblDescripLabel' AS vfpxbaselabel WITH ;
		Caption = "Description:", ;
		FontBold = .T., ;
		Left = 387, ;
		Name = "lblDescripLabel", ;
		Top = 40
		*< END OBJECT: ClassLib="vfpxbaselibrary.vcx" BaseClass="label" />

	ADD OBJECT 'lblHomeURL' AS vfpxbaselabel WITH ;
		Caption = "HomeURL", ;
		ForeColor = 0,0,255, ;
		Left = 485, ;
		MousePointer = 15, ;
		Name = "lblHomeURL", ;
		Top = 240
		*< END OBJECT: ClassLib="vfpxbaselibrary.vcx" BaseClass="label" />

	ADD OBJECT 'lblHomeURLLabel' AS vfpxbaselabel WITH ;
		Caption = "Project URL:", ;
		FontBold = .T., ;
		Left = 385, ;
		Name = "lblHomeURLLabel", ;
		Top = 240
		*< END OBJECT: ClassLib="vfpxbaselibrary.vcx" BaseClass="label" />

	ADD OBJECT 'lblInstalledDate' AS vfpxbaselabel WITH ;
		Caption = "Installed On", ;
		Left = 485, ;
		Name = "lblInstalledDate", ;
		Top = 280
		*< END OBJECT: ClassLib="vfpxbaselibrary.vcx" BaseClass="label" />

	ADD OBJECT 'lblInstalledDateLabel' AS vfpxbaselabel WITH ;
		Caption = "Installed on:", ;
		FontBold = .T., ;
		Left = 385, ;
		Name = "lblInstalledDateLabel", ;
		Top = 280
		*< END OBJECT: ClassLib="vfpxbaselibrary.vcx" BaseClass="label" />

	ADD OBJECT 'lblInstalledVersion' AS vfpxbaselabel WITH ;
		Caption = "Version", ;
		Left = 485, ;
		Name = "lblInstalledVersion", ;
		Top = 260
		*< END OBJECT: ClassLib="vfpxbaselibrary.vcx" BaseClass="label" />

	ADD OBJECT 'lblInstalledVersionLabel' AS vfpxbaselabel WITH ;
		Caption = "Installed version:", ;
		FontBold = .T., ;
		Left = 385, ;
		Name = "lblInstalledVersionLabel", ;
		Top = 260
		*< END OBJECT: ClassLib="vfpxbaselibrary.vcx" BaseClass="label" />

	ADD OBJECT 'lblKeywordsLabel' AS vfpxbaselabel WITH ;
		Caption = "Tags:", ;
		FontBold = .T., ;
		Left = 385, ;
		Name = "lblKeywordsLabel", ;
		Top = 145
		*< END OBJECT: ClassLib="vfpxbaselibrary.vcx" BaseClass="label" />

	ADD OBJECT 'lblPubDate' AS vfpxbaselabel WITH ;
		Caption = "PubDate", ;
		Left = 485, ;
		Name = "lblPubDate", ;
		Top = 200
		*< END OBJECT: ClassLib="vfpxbaselibrary.vcx" BaseClass="label" />

	ADD OBJECT 'lblPubDateLabel' AS vfpxbaselabel WITH ;
		Caption = "Date published:", ;
		FontBold = .T., ;
		Left = 385, ;
		Name = "lblPubDateLabel", ;
		Top = 200
		*< END OBJECT: ClassLib="vfpxbaselibrary.vcx" BaseClass="label" />

	ADD OBJECT 'lblSearch' AS vfpxbaselabel WITH ;
		Caption = "Search:", ;
		Left = 220, ;
		Name = "lblSearch", ;
		Top = 13
		*< END OBJECT: ClassLib="vfpxbaselibrary.vcx" BaseClass="label" />

	ADD OBJECT 'lblVersion' AS vfpxbaselabel WITH ;
		Caption = "Version", ;
		Left = 485, ;
		Name = "lblVersion", ;
		Top = 220
		*< END OBJECT: ClassLib="vfpxbaselibrary.vcx" BaseClass="label" />

	ADD OBJECT 'lblVersionLabel' AS vfpxbaselabel WITH ;
		Caption = "Version:", ;
		FontBold = .T., ;
		Left = 386, ;
		Name = "lblVersionLabel", ;
		Top = 220
		*< END OBJECT: ClassLib="vfpxbaselibrary.vcx" BaseClass="label" />

	ADD OBJECT 'lstPackages' AS vfpxbaselistbox WITH ;
		Height = 290, ;
		Left = 10, ;
		Name = "lstPackages", ;
		Top = 42, ;
		Width = 360
		*< END OBJECT: ClassLib="vfpxbaselibrary.vcx" BaseClass="listbox" />

	ADD OBJECT 'txtSearch' AS vfpxbasetextbox WITH ;
		Height = 23, ;
		Left = 265, ;
		Name = "txtSearch", ;
		Top = 10, ;
		Width = 270
		*< END OBJECT: ClassLib="vfpxbaselibrary.vcx" BaseClass="textbox" />
	
	PROCEDURE getpackages		&& Creates a cursor of packages
		* Create a cursor of installed packages.
		
		*** TODO: path
		lcPackagesFile = 'packages\packages.xml'
		if file(lcPackagesFile)
			xmltocursor(lcPackagesFile, 'installed', 512)
		else
			create cursor Installed (Name C(1), Version C(1), Date D)
		endif file(lcPackagesFile)
		
		* Create a cursor of all or just installed packages.
		
		lcJoin = iif(This.chkShowOnlyInstalled.Value, 'inner', 'left outer')
		select FoxGetPackages.Name, ;
				Installed.Version as InstalledVersion, ;
				Installed.Date as InstalledDate, ;
				FoxGetPackages.Author, ;
				FoxGetPackages.Descrip, ;
				FoxGetPackages.Keywords, ;
				FoxGetPackages.Version, ;
				FoxGetPackages.PubDate, ;
				FoxGetPackages.HomeURL, ;
				FoxGetPackages.InstallURL ;
			from FoxGetPackages ;
			&lcJoin join Installed on upper(Installed.Name) = upper(FoxGetPackages.Name) ;
			into cursor Packages
		select Name, upper(Name) ;
			from Packages ;
			order by 2 ;
			into array This.lstPackages.aItems
		This.lstPackages.Requery()
		
	ENDPROC

	PROCEDURE Init
		dodefault()
		*** TODO: use browser control instead of editbox for descrip
		
		*** TODO: download xml and convert to cursor. VFPX Project Deployment: convert table to xml and put into FoxGet(?) folder. Doc: update table to add new installers
		use foxgetpackages
		
		This.GetPackages()
		
		select Name, upper(Name) ;
			from FoxGetPackages ;
			order by 2 ;
			into array This.lstPackages.aItems
		This.lstPackages.Requery()
		This.lstPackages.ListIndex = 1
		
		declare integer ShellExecute in Shell32.dll ;
			integer hwnd, ;
			string lpVerb, ;
			string lpFile, ;
			string lpParameters, ;
			string lpDirectory, ;
			long nShowCmd 
		
		lcPath = addbs(justpath(substr(sys(16), at(' ', sys(16), 2) + 1)))
		set procedure to (lcPath + 'foxget.prg') additive
		
	ENDPROC

	PROCEDURE update		&& Displays the installation progress
		lparameters tcMessage
		This.edtProgress.Value = This.edtProgress.Value + tcMessage + chr(13)
		
	ENDPROC

	PROCEDURE chkShowOnlyInstalled.anychange
		Thisform.GetPackages()
		
	ENDPROC

	PROCEDURE cmdInstall.Click
		*** TODO: download installer
		lcInstaller = 'Installers\' + trim(FoxGetPackages.InstallURL)
		loInstaller = newobject(juststem(lcInstaller), lcInstaller)
		loInstaller.cPackageName = trim(FoxGetPackages.Name)
		loInstaller.cVersion     = trim(FoxGetPackages.Version)
		bindevent(loInstaller, 'Update', Thisform, 'Update')
		loInstaller.Install()
		Thisform.GetInstalledPackages()
		Thisform.Refresh()
		
	ENDPROC

	PROCEDURE cmdInstall.Refresh
		This.Enabled = empty(nvl(Packages.InstalledDate, {}))
		
	ENDPROC

	PROCEDURE cmdUninstall.Click
		*** TODO
	ENDPROC

	PROCEDURE cmdUninstall.Refresh
		This.Enabled = not empty(nvl(Packages.InstalledDate, {}))
		
	ENDPROC

	PROCEDURE cmdUpdate.Click
		*** TODO
	ENDPROC

	PROCEDURE cmdUpdate.Refresh
		This.Enabled = not empty(nvl(Packages.InstalledDate, {})) and ;
			(Packages.InstalledDate < Packages.PubDate or ;
			(not empty(Packages.InstalledVersion) and ;
				trim(Packages.InstalledVersion) < trim(Packages.Version)))
		
	ENDPROC

	PROCEDURE lblAuthor.Refresh
		This.Caption = Packages.Author
		
	ENDPROC

	PROCEDURE lblHomeURL.Click
		ShellExecute(0, 'Open', This.Caption, '', '', 1)
	ENDPROC

	PROCEDURE lblHomeURL.Refresh
		This.Caption = Packages.HomeURL
		
	ENDPROC

	PROCEDURE lblInstalledDate.Refresh
		This.Caption = iif(empty(nvl(Packages.InstalledDate, {})), 'Not installed', transform(Packages.InstalledDate))
		
	ENDPROC

	PROCEDURE lblInstalledVersion.Refresh
		This.Caption = iif(empty(nvl(Packages.InstalledDate, {})), 'Not installed', Packages.InstalledVersion)
		
	ENDPROC

	PROCEDURE lblPubDate.Refresh
		This.Caption = transform(Packages.PubDate)
		
	ENDPROC

	PROCEDURE lblVersion.Refresh
		This.Caption = Packages.Version
		
	ENDPROC

	PROCEDURE lstPackages.anychange
		select Packages
		locate for Name = This.DisplayValue
		Thisform.Refresh()
		
	ENDPROC

	PROCEDURE txtSearch.InteractiveChange
		*** TODO: need anychange and implement search
	ENDPROC

ENDDEFINE
